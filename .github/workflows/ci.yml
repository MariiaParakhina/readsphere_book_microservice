name: CI

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: readsphere
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: build and push the docker image
        env:
          GOOGLE_PROJECT: readsphere
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/readsphere/demo/nginx:latest
          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/demo/nginx:latest

      - name: deploy to gke
        env:
          GOOGLE_PROJECT: readsphere
        run: |
          gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1
          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" resources.yaml
          kubectl apply -f resources.yaml
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #     checks: write

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Setup .NET SDK
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: '8.x'

  #     - name: Install ReportGenerator
  #       run: dotnet tool install -g dotnet-reportgenerator-globaltool

  #     - name: Restore Dependencies
  #       run: dotnet restore

  #     - name: Build Application
  #       run: dotnet build --configuration Release      
  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #     checks: write
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #     - name: Build and Test with Code Coverage
  #       run: |
  #         dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura        
  #     - name: Upload coverage reports to Codecov
  #       uses: codecov/codecov-action@v4.0.1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         slug: MariiaParakhina/readsphere_book_microservice  
  #     - name: Run Qodana Scan
  #       uses: JetBrains/qodana-action@v2023.3
  #       env:
  #         QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
  # docker:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #     - name: Build image
  #       working-directory: ./
  #       run: docker build -f ./Configuration/Dockerfile -t book-api:latest .   
  #     - name: Log in to Docker Hub
  #       run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u mariia5345 --password-stdin
  #     - name: Push image to Docker Hub
  #       run: |
  #         docker tag docker.io/library/book-api:latest mariia5345/book-api:latest
  #         docker push mariia5345/book-api:latest
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2      
  #     - name: Trigger Workflow
  #       run: |
  #           curl -X POST \
  #             -H "Accept: application/vnd.github.v3+json" \
  #             -H "Authorization: Bearer ${{ secrets.G_ACCESS_TOKEN }}" \
  #             -H "Content-Type: application/json" \
  #             -H "X-GitHub-Api-Version: 2022-11-28" \
  #             -d '{"ref": "main"}' \
  #             https://api.github.com/repos/MariiaParakhina/readsphere/actions/workflows/90898442/dispatches
 

